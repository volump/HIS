{"remainingRequest":"E:\\datebaseFinal\\his-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\datebaseFinal\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\datebaseFinal\\his-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\datebaseFinal\\his-vue\\src\\views\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\datebaseFinal\\his-vue\\src\\views\\role\\index.vue","mtime":1639479772000},{"path":"E:\\datebaseFinal\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\datebaseFinal\\his-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\datebaseFinal\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\datebaseFinal\\his-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkU6L2RhdGViYXNlRmluYWwvaGlzLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJFOi9kYXRlYmFzZUZpbmFsL2hpcy12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgUm9sZUVkaXQgZnJvbSAnQC9jb21wb25lbnRzL3JvbGUvZWRpdC52dWUnOwppbXBvcnQgQnJlYWRjcnVtYiBmcm9tICdAL2NvbXBvbmVudHMvQnJlYWRjcnVtYic7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVlcnlJbmZvOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcGFnZTogMSwKICAgICAgICBsaW1pdDogNQogICAgICB9LAogICAgICB0YWJsZURhdGE6IFtdLAogICAgICB0b3RhbDogMCwKICAgICAgc2hvdzogZmFsc2UsCiAgICAgIGVkaXRpZDogbnVsbCwKICAgICAgc2VsZWN0ZWRyb3c6IFtdLAogICAgICB0aXRsZTogJycsCiAgICAgIHNldFJpZ2h0RGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIC8vIOaJgOacieadg+mZkOeahOaVsOaNrgogICAgICByaWdodHNsaXN0OiBbXSwKICAgICAgLy8g5qCR5b2i5o6n5Lu255qE5bGe5oCn57uR5a6a5a+56LGhCiAgICAgIHRyZWVQcm9wczogewogICAgICAgIGxhYmVsOiAnbmFtZScsCiAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicKICAgICAgfSwKICAgICAgLy8g6buY6K6k6YCJ5Lit55qE6IqC54K5SWTlgLzmlbDnu4QKICAgICAgZGVmS2V5czogW10sCiAgICAgIC8vIOW9k+WJjeWNs+WwhuWIhumFjeadg+mZkOeahOinkuiJsmlkCiAgICAgIHJvbGVJZDogJycsCiAgICAgIC8vIOiOt+WPlueUqOaIt+adg+mZkOWQju+8jOWvueW6lOaVsOaNruW6k+eahOWtl+autUlkCiAgICAgIGlkOiAwLAogICAgICAvLyDmnYPpmZDniLboioLngrkKICAgICAgcGFyZW50OiBbXQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFJvbGVFZGl0OiBSb2xlRWRpdCwKICAgIEJyZWFkY3J1bWI6IEJyZWFkY3J1bWIKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuZ2V0RGF0YSgpOwogICAgdGhpcy4kYXhpb3MuaHR0cC5nZXQoJy9wZXJtaXNzaW9ucy9wYXJlbnQnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICBfdGhpcy5wYXJlbnQgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy4kYXhpb3MuZ2V0KCcvcm9sZXMnLCBmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIudGFibGVEYXRhID0gcmVzcG9uc2UuZGF0YS5yZWNvcmRzOwogICAgICAgIF90aGlzMi50b3RhbCA9IHBhcnNlSW50KHJlc3BvbnNlLmRhdGEudG90YWwpOwogICAgICB9LCB0aGlzLnF1ZXJ5SW5mbyk7CiAgICB9LAogICAgaGFuZGxlRWRpdDogZnVuY3Rpb24gaGFuZGxlRWRpdChpZCkgewogICAgICB0aGlzLnRpdGxlID0gJ+S/ruaUueinkuiJsic7CiAgICAgIHRoaXMuZWRpdGlkID0gaWQ7CiAgICAgIHRoaXMuc2hvdyA9IHRydWU7CiAgICB9LAogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIHRoaXMudGl0bGUgPSAn5aKe5Yqg6KeS6ImyJzsKICAgICAgdGhpcy5lZGl0aWQgPSBudWxsOwogICAgICB0aGlzLnNob3cgPSB0cnVlOwogICAgfSwKICAgIGhhbmRsZURlbGV0ZTogZnVuY3Rpb24gaGFuZGxlRGVsZXRlKGlkKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kYXhpb3MuZGVsKCIvcm9sZXMvIi5jb25jYXQoaWQpLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKF90aGlzMy50b3RhbCA9PT0gKF90aGlzMy5xdWVyeUluZm8ucGFnZSAtIDEpICogX3RoaXMzLnF1ZXJ5SW5mby5saW1pdCArIDEpIF90aGlzMy5xdWVyeUluZm8ucGFnZSAtPSAxOwoKICAgICAgICBfdGhpczMuZ2V0RGF0YSgpOwogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2U6IGZ1bmN0aW9uIGhhbmRsZVNlbGVjdGlvbkNoYW5nZSh2YWwpIHsKICAgICAgLy8gdmFs5Y+C5pWw5Li65omA5pyJ6YCJ5Lit6KGM55qE5pWw5o2uCiAgICAgIHRoaXMuc2VsZWN0ZWRyb3cgPSB2YWw7IC8vIFsge30gLHt9ICx7fSAgICBdCiAgICB9LAogICAgYmF0Y2hkZWw6IGZ1bmN0aW9uIGJhdGNoZGVsKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnNlbGVjdGVkcm93Lmxlbmd0aCA9PT0gMCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoJ+ayoeacieS7u+S9leiiq+mAieS4reeahOaVsOaNricpOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBpZHMgPSBbXTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdGVkcm93Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBpZHMucHVzaCh0aGlzLnNlbGVjdGVkcm93W2ldLmlkKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJGF4aW9zLmRlbCgnL3JvbGVzL2JhdGNoZGVsJywgZnVuY3Rpb24gKCkgewogICAgICAgICAgaWYgKF90aGlzNC50b3RhbCA9PT0gKF90aGlzNC5xdWVyeUluZm8ucGFnZSAtIDEpICogX3RoaXM0LnF1ZXJ5SW5mby5saW1pdCArIGlkcy5sZW5ndGgpIF90aGlzNC5xdWVyeUluZm8ucGFnZSAtPSAxOwoKICAgICAgICAgIF90aGlzNC5nZXREYXRhKCk7CiAgICAgICAgfSwgewogICAgICAgICAgaWRzOiBpZHMuam9pbignLCcpCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVTaXplQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVTaXplQ2hhbmdlKG5ld1NpemUpIHsKICAgICAgdGhpcy5xdWVyeUluZm8ubGltaXQgPSBuZXdTaXplOwogICAgICB0aGlzLmdldERhdGEoKTsKICAgIH0sCiAgICAvLyDnm5HlkKwg6aG156CB5YC8IOaUueWPmOeahOS6i+S7tgogICAgaGFuZGxlQ3VycmVudENoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ3VycmVudENoYW5nZShuZXdQYWdlKSB7CiAgICAgIHRoaXMucXVlcnlJbmZvLnBhZ2UgPSBuZXdQYWdlOwogICAgICB0aGlzLmdldERhdGEoKTsKICAgIH0sCiAgICAvLyDnm5HlkKwgc3dpdGNoIOW8gOWFs+eKtuaAgeeahOaUueWPmAogICAgc3RhdGVDaGFuZ2VkOiBmdW5jdGlvbiBzdGF0ZUNoYW5nZWQoaW5mbykgewogICAgICB2YXIgYWN0aXZlID0gaW5mby5hY3RpdmUgPT09IDEgPyAwIDogMTsKICAgICAgdGhpcy4kYXhpb3MucHV0KCIvcm9sZXMvIi5jb25jYXQoaW5mby5pZCwgIi9zdGF0ZS8iKS5jb25jYXQoYWN0aXZlKSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaW5mby5hY3RpdmUgPSBhY3RpdmU7CiAgICAgIH0pOwogICAgfSwKICAgIGdldFBlcm1pc3Npb25zOiBmdW5jdGlvbiBnZXRQZXJtaXNzaW9ucyhpZCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIF95aWVsZCRfdGhpczUkJGF4aW9zJCwgcmVzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczUucm9sZUlkID0gaWQ7IC8vIOiOt+WPluaJgOacieadg+mZkOeahOaVsOaNrgoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS4kYXhpb3MuaHR0cC5nZXQoJ3Blcm1pc3Npb25zJyk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIF95aWVsZCRfdGhpczUkJGF4aW9zJCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXMgPSBfeWllbGQkX3RoaXM1JCRheGlvcyQuZGF0YTsKCiAgICAgICAgICAgICAgICBpZiAoIShyZXMuc3RhdHVzICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfdGhpczUuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPluadg+mZkOaVsOaNruWksei0pe+8gScpKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgLy8g5oqK6I635Y+W5Yiw55qE5p2D6ZmQ5pWw5o2u5L+d5a2Y5YiwIGRhdGEg5LitCiAgICAgICAgICAgICAgICBfdGhpczUucmlnaHRzbGlzdCA9IHJlcy5kYXRhOyAvLyBjb25zb2xlLmxvZyh0aGlzLnJpZ2h0c2xpc3QpCgogICAgICAgICAgICAgICAgX3RoaXM1LmdldExlYWZLZXlzKGlkKTsKCiAgICAgICAgICAgICAgICBfdGhpczUuc2V0UmlnaHREaWFsb2dWaXNpYmxlID0gdHJ1ZTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDpgJrov4fpgJLlvZLnmoTlvaLlvI/vvIzojrflj5bop5LoibLkuIvmiYDmnInkuoznuqfmnYPpmZDnmoRpZO+8jOW5tuS/neWtmOWIsCBkZWZLZXlzIOaVsOe7hOS4rQogICAgZ2V0TGVhZktleXM6IGZ1bmN0aW9uIGdldExlYWZLZXlzKGlkKSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIF95aWVsZCRfdGhpczYkJGF4aW9zJCwgcmVzLCBpZHM7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXM2LiRheGlvcy5odHRwLmdldCgiL3JvbGUtcGVybWlzc2lvbi8iLmNvbmNhdChpZCkpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfeWllbGQkX3RoaXM2JCRheGlvcyQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHJlcyA9IF95aWVsZCRfdGhpczYkJGF4aW9zJC5kYXRhOwoKICAgICAgICAgICAgICAgIGlmICghKHJlcy5zdGF0dXMgIT09IDIwMCkpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA3OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpczYuaWQgPSAwOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfdGhpczYuaWQgPSByZXMuZGF0YS5pZDsKICAgICAgICAgICAgICAgIGlkcyA9IHJlcy5kYXRhLnBlcm1pc3Npb2luSWQgfHwgJyc7CiAgICAgICAgICAgICAgICBpZHMgPSBpZHMuc3BsaXQoJywnKTsKICAgICAgICAgICAgICAgIF90aGlzNi5kZWZLZXlzID0gaWRzLm1hcChmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBwYXJzZUludCh2YWwpOwogICAgICAgICAgICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuICFfdGhpczYucGFyZW50LmluY2x1ZGVzKHZhbCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzNi5kZWZLZXlzKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIC8vIOebkeWQrOWIhumFjeadg+mZkOWvueivneahhueahOWFs+mXreS6i+S7tgogICAgc2V0UmlnaHREaWFsb2dDbG9zZWQ6IGZ1bmN0aW9uIHNldFJpZ2h0RGlhbG9nQ2xvc2VkKCkgewogICAgICB0aGlzLmRlZktleXMgPSBbXTsKICAgIH0sCiAgICAvLyDngrnlh7vkuLrop5LoibLliIbphY3mnYPpmZAKICAgIGFsbG90UmlnaHRzOiBmdW5jdGlvbiBhbGxvdFJpZ2h0cygpIHsKICAgICAgdmFyIGtleXMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuJHJlZnMudHJlZVJlZi5nZXRDaGVja2VkS2V5cygpKSwgX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuJHJlZnMudHJlZVJlZi5nZXRIYWxmQ2hlY2tlZEtleXMoKSkpOyAvLyBjb25zb2xlLmxvZyhrZXlzKQoKICAgICAgaWYgKHRoaXMuaWQgPT09IDApIHsKICAgICAgICB0aGlzLiRheGlvcy5wb3N0KCcvcm9sZS1wZXJtaXNzaW9uJywgZnVuY3Rpb24gKCkge30sIHsKICAgICAgICAgIHJvbGVJZDogdGhpcy5yb2xlSWQsCiAgICAgICAgICBwZXJtaXNzaW9pbklkOiBrZXlzLmpvaW4oJywnKQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuaWQpIOmAmui/h2lk6L+b5YWl5bCGcGVybWlzc2lvc0lk5Yqg5YWlCiAgICAgICAgdGhpcy4kYXhpb3MucHV0KCIvcm9sZS1wZXJtaXNzaW9uLyIuY29uY2F0KHRoaXMuaWQpLCBmdW5jdGlvbiAoKSB7fSwgewogICAgICAgICAgcGVybWlzc2lvaW5JZDoga2V5cy5qb2luKCcsJykKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdGhpcy5zZXRSaWdodERpYWxvZ1Zpc2libGUgPSBmYWxzZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <Breadcrumb msg1=\"用户管理\" msg2=\"角色列表\" />\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row :gutter=\"10\">\n        <el-col :span=\"10\">\n          <el-input v-model=\"queryInfo.name\" placeholder=\"请输入要查的角色名\" clearable @clear=\"getData\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getData\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"14\">\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" plain @click=\"add()\">添加角色</el-button>\n          <el-button type=\"warning\" icon=\"el-icon-delete\" plain @click=\"batchdel()\">批量删除</el-button>\n        </el-col>\n      </el-row>\n\n      <el-table\n        :data=\"tableData\"\n        style=\"width: 100%\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column type=\"selection\"></el-table-column>\n        <el-table-column label=\"ID\" width=\"80\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"角色名\"  prop=\"name\"> </el-table-column>\n        <el-table-column label=\"创建时间\" prop=\"createtime\"> </el-table-column>\n        <el-table-column label=\"是否有效\">\n          <template slot-scope=\"scope\">\n            <el-switch\n              :value=\"scope.row.active === 1\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\"\n              @change=\"stateChanged(scope.row)\"\n              >\n            </el-switch>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"操作\" width=\"220px\">\n          <template slot-scope=\"scope\">\n            <el-tooltip effect=\"dark\" content=\"分配权限\" placement=\"top\" :enterable=\"false\">\n              <el-button type=\"info\" icon=\"el-icon-bank-card\" circle @click=\"getPermissions(scope.row.id)\"></el-button>\n            </el-tooltip>\n            <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"handleEdit(scope.row.id)\"></el-button>\n            <el-button type=\"danger\" icon=\"el-icon-delete\" circle  @click=\"handleDelete(scope.row.id)\"></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 分页区域 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.page\"\n        :page-sizes=\"[3, 5, 10, 20]\"\n        :page-size=\"queryInfo.limit\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </el-card>\n\n    <el-dialog :title=\"title\" :visible.sync=\"show\" :close-on-click-modal=\"false\" width=\"500px\">\n      <RoleEdit v-if=\"show\" :show.sync=\"show\" @getData=\"getData()\" :editid=\"editid\"></RoleEdit>\n    </el-dialog>\n\n        <!-- 分配权限的对话框 -->\n    <el-dialog title=\"分配权限\" :visible.sync=\"setRightDialogVisible\" width=\"50%\" @close=\"setRightDialogClosed\">\n      <!-- 树形控件 -->\n      <el-tree :data=\"rightslist\" :props=\"treeProps\" show-checkbox node-key=\"id\" default-expand-all :default-checked-keys=\"defKeys\" ref=\"treeRef\"></el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport RoleEdit from '@/components/role/edit.vue'\nimport Breadcrumb from '@/components/Breadcrumb'\nexport default {\n  data () {\n    return {\n      queryInfo: {\n        name: '',\n        page: 1,\n        limit: 5\n      },\n      tableData: [],\n      total: 0,\n      show: false,\n      editid: null,\n      selectedrow: [],\n      title: '',\n      setRightDialogVisible: false,\n      // 所有权限的数据\n      rightslist: [],\n      // 树形控件的属性绑定对象\n      treeProps: {\n        label: 'name',\n        children: 'children'\n      },\n      // 默认选中的节点Id值数组\n      defKeys: [],\n      // 当前即将分配权限的角色id\n      roleId: '',\n      // 获取用户权限后，对应数据库的字段Id\n      id: 0,\n      // 权限父节点\n      parent: []\n    }\n  },\n  components: {\n    RoleEdit,\n    Breadcrumb\n  },\n  mounted () {\n    this.getData()\n    this.$axios.http.get('/permissions/parent').then(response => {\n      this.parent = response.data.data\n    })\n  },\n  methods: {\n    getData () {\n      this.$axios.get('/roles',\n        response => {\n          this.tableData = response.data.records\n          this.total = parseInt(response.data.total)\n        },\n        this.queryInfo\n      )\n    },\n    handleEdit (id) {\n      this.title = '修改角色'\n      this.editid = id\n      this.show = true\n    },\n    add () {\n      this.title = '增加角色'\n      this.editid = null\n      this.show = true\n    },\n    handleDelete (id) {\n      this.$axios.del(`/roles/${id}`, () => {\n        if (this.total === (this.queryInfo.page - 1) * this.queryInfo.limit + 1) this.queryInfo.page -= 1\n        this.getData()\n      })\n    },\n    handleSelectionChange (val) {\n      // val参数为所有选中行的数据\n      this.selectedrow = val // [ {} ,{} ,{}    ]\n    },\n    batchdel () {\n      if (this.selectedrow.length === 0) {\n        this.$message('没有任何被选中的数据')\n      } else {\n        const ids = []\n        for (let i = 0; i < this.selectedrow.length; i++) {\n          ids.push(this.selectedrow[i].id)\n        }\n        this.$axios.del('/roles/batchdel',\n          () => {\n            if (this.total === (this.queryInfo.page - 1) * this.queryInfo.limit + ids.length) this.queryInfo.page -= 1\n            this.getData()\n          },\n          {\n            ids: ids.join(',')\n          }\n        )\n      }\n    },\n    handleSizeChange (newSize) {\n      this.queryInfo.limit = newSize\n      this.getData()\n    },\n    // 监听 页码值 改变的事件\n    handleCurrentChange (newPage) {\n      this.queryInfo.page = newPage\n      this.getData()\n    },\n    // 监听 switch 开关状态的改变\n    stateChanged (info) {\n      const active = info.active === 1 ? 0 : 1\n      this.$axios.put(`/roles/${info.id}/state/${active}`, response => {\n        info.active = active\n      })\n    },\n    async getPermissions (id) {\n      this.roleId = id\n      // 获取所有权限的数据\n      const { data: res } = await this.$axios.http.get('permissions')\n\n      if (res.status !== 200) {\n        return this.$message.error('获取权限数据失败！')\n      }\n      // 把获取到的权限数据保存到 data 中\n      this.rightslist = res.data\n      // console.log(this.rightslist)\n      this.getLeafKeys(id)\n      this.setRightDialogVisible = true\n    },\n    // 通过递归的形式，获取角色下所有二级权限的id，并保存到 defKeys 数组中\n    async getLeafKeys (id) {\n      const { data: res } = await this.$axios.http.get(`/role-permission/${id}`)\n      if (res.status !== 200) {\n        this.id = 0\n        return\n      }\n      this.id = res.data.id\n      let ids = res.data.permissioinId || ''\n      ids = ids.split(',')\n      this.defKeys = ids.map(val => parseInt(val)).filter(val => !this.parent.includes(val))\n      console.log(this.defKeys)\n    },\n    // 监听分配权限对话框的关闭事件\n    setRightDialogClosed () {\n      this.defKeys = []\n    },\n    // 点击为角色分配权限\n    allotRights () {\n      const keys = [\n        ...this.$refs.treeRef.getCheckedKeys(),\n        ...this.$refs.treeRef.getHalfCheckedKeys()\n      ]\n      // console.log(keys)\n      if (this.id === 0) {\n        this.$axios.post('/role-permission', () => {}, {\n          roleId: this.roleId,\n          permissioinId: keys.join(',')\n        })\n      } else {\n        // console.log(this.id) 通过id进入将permissiosId加入\n        this.$axios.put(`/role-permission/${this.id}`, () => {}, {\n          permissioinId: keys.join(',')\n        })\n      }\n      this.setRightDialogVisible = false\n    }\n\n  }\n}\n</script>\n<style scoped>\n</style>\n"],"sourceRoot":"src/views/role"}]}