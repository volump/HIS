{"remainingRequest":"C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\src\\components\\constant-type\\edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\src\\components\\constant-type\\edit.vue","mtime":1601001436000},{"path":"C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Q\\Desktop\\datebaseFinal\\his-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ29uc3RhbnRUeXBlRWRpdCcsCiAgcHJvcHM6IFsnZWRpdGlkJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy8gY29kZSDlv4XpobvllK/kuIDnmoQKICAgIHZhciBjaGVja0NvZGUgPSBmdW5jdGlvbiBjaGVja0NvZGUocnVsZSwgdmFsdWUsIGNiKSB7CiAgICAgIGlmIChfdGhpcy5lZGl0aWQpIGNiKCk7CgogICAgICB2YXIgcHJvbWlzZSA9IF90aGlzLiRheGlvcy5odHRwLmdldCgnL2NvbnN0YW50VHlwZXMvY2hlY2snLCB7CiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBuYW1lOiB2YWx1ZQogICAgICAgIH0KICAgICAgfSk7CgogICAgICBwcm9taXNlLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuc3RhdHVzICE9PSAyMDApIHsKICAgICAgICAgIGNiKG5ldyBFcnJvcign6K+l5bi45pWw57G75Yir5Luj56CB5bey5a2Y5ZyoJykpOwogICAgICAgIH0KCiAgICAgICAgY2IoKTsKICAgICAgfSk7CiAgICB9OwoKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHsKICAgICAgICBjb2RlOiAnJywKICAgICAgICBuYW1lOiAnJwogICAgICB9LAogICAgICBydWxlczogewogICAgICAgIGNvZGU6IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfnvJbnoIHkuI3og73kuLrnqbonLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwgewogICAgICAgICAgbWluOiAxLAogICAgICAgICAgbWF4OiAxMDAsCiAgICAgICAgICBtZXNzYWdlOiAn6ZW/5bqm5ZyoIDEg5YiwIDEwMCDkuKrlrZfnrKYnLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfSwgewogICAgICAgICAgdmFsaWRhdG9yOiBjaGVja0NvZGUsCiAgICAgICAgICB0cmlnZ2VyOiAnYmx1cicKICAgICAgICB9XSwKICAgICAgICBuYW1lOiBbewogICAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgICBtZXNzYWdlOiAn57G75Yir5ZCN5LiN6IO95Li656m6JywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH0sIHsKICAgICAgICAgIG1pbjogMSwKICAgICAgICAgIG1heDogMTAwLAogICAgICAgICAgbWVzc2FnZTogJ+mVv+W6puWcqCAxIOWIsCAxMDAg5Liq5a2X56ymJywKICAgICAgICAgIHRyaWdnZXI6ICdibHVyJwogICAgICAgIH1dCiAgICAgIH0KICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgaWYgKHRoaXMuZWRpdGlkKSB7CiAgICAgIC8vIOmAmui/h2lkIOivu+WOn+Wni+aVsOaNrgogICAgICB0aGlzLiRheGlvcy5nZXQoIi9jb25zdGFudFR5cGVzLyIuY29uY2F0KHRoaXMuZWRpdGlkKSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMyLmZvcm0uY29kZSA9IHJlc3BvbnNlLmRhdGEuY29kZTsKICAgICAgICBfdGhpczIuZm9ybS5uYW1lID0gcmVzcG9uc2UuZGF0YS5uYW1lOwogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHNhdmU6IGZ1bmN0aW9uIHNhdmUoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy4kcmVmcy5mb3JtLnZhbGlkYXRlKGZ1bmN0aW9uICh2YWxpZCkgewogICAgICAgIGlmICghdmFsaWQpIHJldHVybjsKCiAgICAgICAgaWYgKF90aGlzMy5lZGl0aWQpIHsKICAgICAgICAgIF90aGlzMy4kYXhpb3MucHV0KCIvY29uc3RhbnRUeXBlcy8iLmNvbmNhdChfdGhpczMuZWRpdGlkKSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIC8vIOWtkOe7hOS7tuimgeaUueWPmOeItue7hOS7tueahOWAvAogICAgICAgICAgICBfdGhpczMuJGVtaXQoJ3VwZGF0ZTpzaG93JywgZmFsc2UpOwoKICAgICAgICAgICAgX3RoaXMzLiRlbWl0KCdnZXREYXRhJyk7CiAgICAgICAgICB9LCBfdGhpczMuZm9ybSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMy4kYXhpb3MucG9zdCgnL2NvbnN0YW50VHlwZXMnLCBmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgLy8g5a2Q57uE5Lu26KaB5pS55Y+Y54i257uE5Lu255qE5YC8CiAgICAgICAgICAgIF90aGlzMy4kZW1pdCgndXBkYXRlOnNob3cnLCBmYWxzZSk7CgogICAgICAgICAgICBfdGhpczMuJGVtaXQoJ2dldERhdGEnKTsKICAgICAgICAgIH0sIF90aGlzMy5mb3JtKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"120px\">\n      <el-form-item label=\"常数类别代码\"  prop=\"code\">\n        <el-input v-model=\"form.code\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"常数类别名\"  prop=\"name\">\n        <el-input v-model=\"form.name\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" plain @click=\"save\">保存数据</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ConstantTypeEdit',\n  props: ['editid'],\n  data () {\n    // code 必须唯一的\n    var checkCode = (rule, value, cb) => {\n      if (this.editid) cb()\n      const promise = this.$axios.http.get('/constantTypes/check', { params: { name: value } })\n      promise.then(\n        response => {\n          if (response.data.status !== 200) {\n            cb(new Error('该常数类别代码已存在'))\n          }\n          cb()\n        }\n      )\n    }\n    return {\n      form: {\n        code: '',\n        name: ''\n      },\n      rules: {\n        code: [\n          { required: true, message: '编码不能为空', trigger: 'blur' },\n          { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' },\n          { validator: checkCode, trigger: 'blur' }\n        ],\n        name: [\n          { required: true, message: '类别名不能为空', trigger: 'blur' },\n          { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created () {\n    if (this.editid) {\n      // 通过id 读原始数据\n      this.$axios.get(`/constantTypes/${this.editid}`, response => {\n        this.form.code = response.data.code\n        this.form.name = response.data.name\n      })\n    }\n  },\n  methods: {\n    save () {\n      this.$refs.form.validate((valid) => {\n        if (!valid) return\n        if (this.editid) {\n          this.$axios.put(`/constantTypes/${this.editid}`, response => {\n            // 子组件要改变父组件的值\n            this.$emit('update:show', false)\n            this.$emit('getData')\n          }, this.form)\n        } else {\n          this.$axios.post('/constantTypes', response => {\n            // 子组件要改变父组件的值\n            this.$emit('update:show', false)\n            this.$emit('getData')\n          }, this.form)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components/constant-type"}]}