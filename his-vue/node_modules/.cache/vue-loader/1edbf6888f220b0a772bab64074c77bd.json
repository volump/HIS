{"remainingRequest":"D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\src\\components\\Menu.vue?vue&type=style&index=0&id=9bcc0be2&lang=less&scoped=true&","dependencies":[{"path":"D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\src\\components\\Menu.vue","mtime":1601001435000},{"path":"D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\idea_2019\\AllProject\\SpringBoot\\vue医院管理系统\\his\\his-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5lbC1tZW51IHsKICBib3JkZXItcmlnaHQ6IG5vbmU7Cn0KCg=="},{"version":3,"sources":["Menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4NA;AACA;AACA","file":"Menu.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <el-menu\n      background-color=\"#333744\"\n      text-color=\"#fff\"\n      active-text-color=\"#409EFF\"\n      unique-opened\n      :collapse=\"isCollapse\"\n      :collapse-transition=\"false\"\n      router\n      :default-active=\"activeurl\"\n    >\n      <!-- 一级菜单 -->\n      <el-submenu :index=\"item.id + ''\" v-for=\"item in menulist\" :key=\"item.id\">\n        <!-- 一级菜单的模板区域 -->\n        <template slot=\"title\">\n          <!-- 图标 -->\n          <i :class=\"iconsObj[item.id]\"></i>\n          <!-- 文本 -->\n          <span>{{ item.name }}</span>\n        </template>\n\n        <!-- 二级菜单 -->\n        <el-menu-item\n          :index=\"'/' + subItem.url\"\n          v-for=\"subItem in item.children\"\n          :key=\"subItem.id\"\n          @click=\"saveNavState('/' + subItem.url)\"\n        >\n          <template slot=\"title\">\n            <!-- 图标 -->\n            <i class=\"el-icon-menu\"></i>\n            <!-- 文本 -->\n            <span>{{ subItem.name }}</span>\n          </template>\n        </el-menu-item>\n      </el-submenu>\n    </el-menu>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n  name: 'Menu',\n  data () {\n    return {\n      // 左侧导航栏菜单数据 可以通过token向服务器获取用户的菜单信息（根据角色权限不同）\n      menulist: [],\n      // menulist: [\n      //   {\n      //     id: 100,\n      //     name: '用户管理',\n      //     url: 'users',\n      //     children: [\n      //       {\n      //         id: 101,\n      //         name: '用户列表',\n      //         url: 'user',\n      //         children: []\n      //       },\n      //       {\n      //         id: 102,\n      //         name: '角色管理',\n      //         url: 'role',\n      //         children: []\n      //       },\n      //       {\n      //         id: 103,\n      //         name: '权限管理',\n      //         url: 'permission',\n      //         children: []\n      //       }\n      //     ]\n      //   },\n      //   {\n      //     id: 200,\n      //     name: '基本信息管理',\n      //     url: 'constant',\n      //     children: [\n      //       {\n      //         id: 201,\n      //         name: '常数类别管理',\n      //         url: 'constant-type',\n      //         children: []\n      //       },\n      //       {\n      //         id: 202,\n      //         name: '常数项目管理',\n      //         url: 'constant-item',\n      //         children: []\n      //       },\n      //       {\n      //         id: 203,\n      //         name: '挂号级别',\n      //         url: 'registlevel',\n      //         children: []\n      //       },\n      //       {\n      //         id: 204,\n      //         name: '科室管理',\n      //         url: 'department',\n      //         children: []\n      //       },\n      //       {\n      //         id: 205,\n      //         name: '检查项目管理',\n      //         url: 'check-item',\n      //         children: []\n      //       },\n      //       {\n      //         id: 206,\n      //         name: '检验项目管理',\n      //         url: 'inspect-item',\n      //         children: []\n      //       }\n      //     ]\n      //   },\n      //   {\n      //     id: 300,\n      //     name: '挂号收费',\n      //     url: 'regist',\n      //     children: [\n      //       {\n      //         id: 301,\n      //         name: '挂号',\n      //         url: 'register',\n      //         children: []\n      //       },\n      //       {\n      //         id: 302,\n      //         name: '退号',\n      //         url: 'return-num',\n      //         children: []\n      //       },\n      //       {\n      //         id: 303,\n      //         name: '收费',\n      //         url: 'fee',\n      //         children: []\n      //       },\n      //       {\n      //         id: 304,\n      //         name: '退费',\n      //         url: 'refund',\n      //         children: []\n      //       }\n      //     ]\n      //   },\n      //   {\n      //     id: 400,\n      //     name: '医生工作站',\n      //     url: 'doctor',\n      //     children: [\n      //       {\n      //         id: 401,\n      //         name: '病历首页',\n      //         url: 'doctor',\n      //         children: []\n      //       },\n      //       {\n      //         id: 402,\n      //         name: '科室病例',\n      //         url: 'dept_list',\n      //         children: []\n      //       },\n      //       {\n      //         id: 403,\n      //         name: '挂号列表',\n      //         url: 'cases',\n      //         children: []\n      //       }\n      //     ]\n      //   }\n      // ],\n      // 通过对象的key 和上面的菜单来改变图标样式\n      // iconsObj: {\n      //   100: 'el-icon-user',\n      //   200: 'el-icon-setting',\n      //   300: 'el-icon-s-order',\n      //   400: 'el-icon-s-cooperation'\n      // },\n      iconsObj: {\n        1: 'el-icon-user',\n        2: 'el-icon-setting',\n        3: 'el-icon-s-order',\n        4: 'el-icon-s-cooperation'\n      },\n      // 被激活的链接地址\n      activeurl: ''\n    }\n  },\n  created () {\n    // this.getMenuList(); 用来获取列表信息\n    this.activeurl = window.sessionStorage.getItem('activeurl')\n    this.$axios.http.get('/permissions/userPermissionList').then(reponse => {\n      // console.log(reponse.data.data)\n      if (reponse.data.status !== 200) {\n        this.$message.error(reponse.data.message)\n        this.$router.push('/login')\n      }\n      this.menulist = reponse.data.data\n    })\n  },\n  methods: {\n    // 保存链接的激活状态\n    saveNavState (activeurl) {\n      window.sessionStorage.setItem('activeurl', activeurl)\n      this.activeurl = activeurl\n    }\n  },\n  computed: {\n    ...mapState({\n      isCollapse: 'isCollapse'\n    })\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.el-menu {\n  border-right: none;\n}\n\n</style>\n"]}]}