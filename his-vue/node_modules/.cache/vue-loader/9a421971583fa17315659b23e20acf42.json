{"remainingRequest":"E:\\大三\\大三_上\\数据库课程\\数据库\\数据库期末答辩\\datebaseFinal\\his-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\大三\\大三_上\\数据库课程\\数据库\\数据库期末答辩\\datebaseFinal\\his-vue\\src\\views\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\大三\\大三_上\\数据库课程\\数据库\\数据库期末答辩\\datebaseFinal\\his-vue\\src\\views\\role\\index.vue","mtime":1639479772000},{"path":"E:\\大三\\大三_上\\数据库课程\\数据库\\数据库期末答辩\\datebaseFinal\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\大三\\大三_上\\数据库课程\\数据库\\数据库期末答辩\\datebaseFinal\\his-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\大三\\大三_上\\数据库课程\\数据库\\数据库期末答辩\\datebaseFinal\\his-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\大三\\大三_上\\数据库课程\\数据库\\数据库期末答辩\\datebaseFinal\\his-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSb2xlRWRpdCBmcm9tICdAL2NvbXBvbmVudHMvcm9sZS9lZGl0LnZ1ZScKaW1wb3J0IEJyZWFkY3J1bWIgZnJvbSAnQC9jb21wb25lbnRzL0JyZWFkY3J1bWInCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXJ5SW5mbzogewogICAgICAgIG5hbWU6ICcnLAogICAgICAgIHBhZ2U6IDEsCiAgICAgICAgbGltaXQ6IDUKICAgICAgfSwKICAgICAgdGFibGVEYXRhOiBbXSwKICAgICAgdG90YWw6IDAsCiAgICAgIHNob3c6IGZhbHNlLAogICAgICBlZGl0aWQ6IG51bGwsCiAgICAgIHNlbGVjdGVkcm93OiBbXSwKICAgICAgdGl0bGU6ICcnLAogICAgICBzZXRSaWdodERpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICAvLyDmiYDmnInmnYPpmZDnmoTmlbDmja4KICAgICAgcmlnaHRzbGlzdDogW10sCiAgICAgIC8vIOagkeW9ouaOp+S7tueahOWxnuaAp+e7keWumuWvueixoQogICAgICB0cmVlUHJvcHM6IHsKICAgICAgICBsYWJlbDogJ25hbWUnLAogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nCiAgICAgIH0sCiAgICAgIC8vIOm7mOiupOmAieS4reeahOiKgueCuUlk5YC85pWw57uECiAgICAgIGRlZktleXM6IFtdLAogICAgICAvLyDlvZPliY3ljbPlsIbliIbphY3mnYPpmZDnmoTop5LoibJpZAogICAgICByb2xlSWQ6ICcnLAogICAgICAvLyDojrflj5bnlKjmiLfmnYPpmZDlkI7vvIzlr7nlupTmlbDmja7lupPnmoTlrZfmrrVJZAogICAgICBpZDogMCwKICAgICAgLy8g5p2D6ZmQ54i26IqC54K5CiAgICAgIHBhcmVudDogW10KICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIFJvbGVFZGl0LAogICAgQnJlYWRjcnVtYgogIH0sCiAgbW91bnRlZCAoKSB7CiAgICB0aGlzLmdldERhdGEoKQogICAgdGhpcy4kYXhpb3MuaHR0cC5nZXQoJy9wZXJtaXNzaW9ucy9wYXJlbnQnKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgdGhpcy5wYXJlbnQgPSByZXNwb25zZS5kYXRhLmRhdGEKICAgIH0pCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXREYXRhICgpIHsKICAgICAgdGhpcy4kYXhpb3MuZ2V0KCcvcm9sZXMnLAogICAgICAgIHJlc3BvbnNlID0+IHsKICAgICAgICAgIHRoaXMudGFibGVEYXRhID0gcmVzcG9uc2UuZGF0YS5yZWNvcmRzCiAgICAgICAgICB0aGlzLnRvdGFsID0gcGFyc2VJbnQocmVzcG9uc2UuZGF0YS50b3RhbCkKICAgICAgICB9LAogICAgICAgIHRoaXMucXVlcnlJbmZvCiAgICAgICkKICAgIH0sCiAgICBoYW5kbGVFZGl0IChpZCkgewogICAgICB0aGlzLnRpdGxlID0gJ+S/ruaUueinkuiJsicKICAgICAgdGhpcy5lZGl0aWQgPSBpZAogICAgICB0aGlzLnNob3cgPSB0cnVlCiAgICB9LAogICAgYWRkICgpIHsKICAgICAgdGhpcy50aXRsZSA9ICflop7liqDop5LoibInCiAgICAgIHRoaXMuZWRpdGlkID0gbnVsbAogICAgICB0aGlzLnNob3cgPSB0cnVlCiAgICB9LAogICAgaGFuZGxlRGVsZXRlIChpZCkgewogICAgICB0aGlzLiRheGlvcy5kZWwoYC9yb2xlcy8ke2lkfWAsICgpID0+IHsKICAgICAgICBpZiAodGhpcy50b3RhbCA9PT0gKHRoaXMucXVlcnlJbmZvLnBhZ2UgLSAxKSAqIHRoaXMucXVlcnlJbmZvLmxpbWl0ICsgMSkgdGhpcy5xdWVyeUluZm8ucGFnZSAtPSAxCiAgICAgICAgdGhpcy5nZXREYXRhKCkKICAgICAgfSkKICAgIH0sCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2UgKHZhbCkgewogICAgICAvLyB2YWzlj4LmlbDkuLrmiYDmnInpgInkuK3ooYznmoTmlbDmja4KICAgICAgdGhpcy5zZWxlY3RlZHJvdyA9IHZhbCAvLyBbIHt9ICx7fSAse30gICAgXQogICAgfSwKICAgIGJhdGNoZGVsICgpIHsKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRyb3cubGVuZ3RoID09PSAwKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZSgn5rKh5pyJ5Lu75L2V6KKr6YCJ5Lit55qE5pWw5o2uJykKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBpZHMgPSBbXQogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RlZHJvdy5sZW5ndGg7IGkrKykgewogICAgICAgICAgaWRzLnB1c2godGhpcy5zZWxlY3RlZHJvd1tpXS5pZCkKICAgICAgICB9CiAgICAgICAgdGhpcy4kYXhpb3MuZGVsKCcvcm9sZXMvYmF0Y2hkZWwnLAogICAgICAgICAgKCkgPT4gewogICAgICAgICAgICBpZiAodGhpcy50b3RhbCA9PT0gKHRoaXMucXVlcnlJbmZvLnBhZ2UgLSAxKSAqIHRoaXMucXVlcnlJbmZvLmxpbWl0ICsgaWRzLmxlbmd0aCkgdGhpcy5xdWVyeUluZm8ucGFnZSAtPSAxCiAgICAgICAgICAgIHRoaXMuZ2V0RGF0YSgpCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBpZHM6IGlkcy5qb2luKCcsJykKICAgICAgICAgIH0KICAgICAgICApCiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVTaXplQ2hhbmdlIChuZXdTaXplKSB7CiAgICAgIHRoaXMucXVlcnlJbmZvLmxpbWl0ID0gbmV3U2l6ZQogICAgICB0aGlzLmdldERhdGEoKQogICAgfSwKICAgIC8vIOebkeWQrCDpobXnoIHlgLwg5pS55Y+Y55qE5LqL5Lu2CiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlIChuZXdQYWdlKSB7CiAgICAgIHRoaXMucXVlcnlJbmZvLnBhZ2UgPSBuZXdQYWdlCiAgICAgIHRoaXMuZ2V0RGF0YSgpCiAgICB9LAogICAgLy8g55uR5ZCsIHN3aXRjaCDlvIDlhbPnirbmgIHnmoTmlLnlj5gKICAgIHN0YXRlQ2hhbmdlZCAoaW5mbykgewogICAgICBjb25zdCBhY3RpdmUgPSBpbmZvLmFjdGl2ZSA9PT0gMSA/IDAgOiAxCiAgICAgIHRoaXMuJGF4aW9zLnB1dChgL3JvbGVzLyR7aW5mby5pZH0vc3RhdGUvJHthY3RpdmV9YCwgcmVzcG9uc2UgPT4gewogICAgICAgIGluZm8uYWN0aXZlID0gYWN0aXZlCiAgICAgIH0pCiAgICB9LAogICAgYXN5bmMgZ2V0UGVybWlzc2lvbnMgKGlkKSB7CiAgICAgIHRoaXMucm9sZUlkID0gaWQKICAgICAgLy8g6I635Y+W5omA5pyJ5p2D6ZmQ55qE5pWw5o2uCiAgICAgIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRheGlvcy5odHRwLmdldCgncGVybWlzc2lvbnMnKQoKICAgICAgaWYgKHJlcy5zdGF0dXMgIT09IDIwMCkgewogICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bmnYPpmZDmlbDmja7lpLHotKXvvIEnKQogICAgICB9CiAgICAgIC8vIOaKiuiOt+WPluWIsOeahOadg+mZkOaVsOaNruS/neWtmOWIsCBkYXRhIOS4rQogICAgICB0aGlzLnJpZ2h0c2xpc3QgPSByZXMuZGF0YQogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnJpZ2h0c2xpc3QpCiAgICAgIHRoaXMuZ2V0TGVhZktleXMoaWQpCiAgICAgIHRoaXMuc2V0UmlnaHREaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIC8vIOmAmui/h+mAkuW9kueahOW9ouW8j++8jOiOt+WPluinkuiJsuS4i+aJgOacieS6jOe6p+adg+mZkOeahGlk77yM5bm25L+d5a2Y5YiwIGRlZktleXMg5pWw57uE5LitCiAgICBhc3luYyBnZXRMZWFmS2V5cyAoaWQpIHsKICAgICAgY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGF4aW9zLmh0dHAuZ2V0KGAvcm9sZS1wZXJtaXNzaW9uLyR7aWR9YCkKICAgICAgaWYgKHJlcy5zdGF0dXMgIT09IDIwMCkgewogICAgICAgIHRoaXMuaWQgPSAwCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgdGhpcy5pZCA9IHJlcy5kYXRhLmlkCiAgICAgIGxldCBpZHMgPSByZXMuZGF0YS5wZXJtaXNzaW9pbklkIHx8ICcnCiAgICAgIGlkcyA9IGlkcy5zcGxpdCgnLCcpCiAgICAgIHRoaXMuZGVmS2V5cyA9IGlkcy5tYXAodmFsID0+IHBhcnNlSW50KHZhbCkpLmZpbHRlcih2YWwgPT4gIXRoaXMucGFyZW50LmluY2x1ZGVzKHZhbCkpCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGVmS2V5cykKICAgIH0sCiAgICAvLyDnm5HlkKzliIbphY3mnYPpmZDlr7nor53moYbnmoTlhbPpl63kuovku7YKICAgIHNldFJpZ2h0RGlhbG9nQ2xvc2VkICgpIHsKICAgICAgdGhpcy5kZWZLZXlzID0gW10KICAgIH0sCiAgICAvLyDngrnlh7vkuLrop5LoibLliIbphY3mnYPpmZAKICAgIGFsbG90UmlnaHRzICgpIHsKICAgICAgY29uc3Qga2V5cyA9IFsKICAgICAgICAuLi50aGlzLiRyZWZzLnRyZWVSZWYuZ2V0Q2hlY2tlZEtleXMoKSwKICAgICAgICAuLi50aGlzLiRyZWZzLnRyZWVSZWYuZ2V0SGFsZkNoZWNrZWRLZXlzKCkKICAgICAgXQogICAgICAvLyBjb25zb2xlLmxvZyhrZXlzKQogICAgICBpZiAodGhpcy5pZCA9PT0gMCkgewogICAgICAgIHRoaXMuJGF4aW9zLnBvc3QoJy9yb2xlLXBlcm1pc3Npb24nLCAoKSA9PiB7fSwgewogICAgICAgICAgcm9sZUlkOiB0aGlzLnJvbGVJZCwKICAgICAgICAgIHBlcm1pc3Npb2luSWQ6IGtleXMuam9pbignLCcpCiAgICAgICAgfSkKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmlkKSDpgJrov4dpZOi/m+WFpeWwhnBlcm1pc3Npb3NJZOWKoOWFpQogICAgICAgIHRoaXMuJGF4aW9zLnB1dChgL3JvbGUtcGVybWlzc2lvbi8ke3RoaXMuaWR9YCwgKCkgPT4ge30sIHsKICAgICAgICAgIHBlcm1pc3Npb2luSWQ6IGtleXMuam9pbignLCcpCiAgICAgICAgfSkKICAgICAgfQogICAgICB0aGlzLnNldFJpZ2h0RGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICB9CgogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/role","sourcesContent":["<template>\n  <div>\n    <Breadcrumb msg1=\"用户管理\" msg2=\"角色列表\" />\n\n    <!-- 卡片视图区域 -->\n    <el-card>\n      <el-row :gutter=\"10\">\n        <el-col :span=\"10\">\n          <el-input v-model=\"queryInfo.name\" placeholder=\"请输入要查的角色名\" clearable @clear=\"getData\">\n            <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getData\"></el-button>\n          </el-input>\n        </el-col>\n        <el-col :span=\"14\">\n          <el-button type=\"primary\" icon=\"el-icon-circle-plus-outline\" plain @click=\"add()\">添加角色</el-button>\n          <el-button type=\"warning\" icon=\"el-icon-delete\" plain @click=\"batchdel()\">批量删除</el-button>\n        </el-col>\n      </el-row>\n\n      <el-table\n        :data=\"tableData\"\n        style=\"width: 100%\"\n        @selection-change=\"handleSelectionChange\"\n      >\n        <el-table-column type=\"selection\"></el-table-column>\n        <el-table-column label=\"ID\" width=\"80\" prop=\"id\"></el-table-column>\n        <el-table-column label=\"角色名\"  prop=\"name\"> </el-table-column>\n        <el-table-column label=\"创建时间\" prop=\"createtime\"> </el-table-column>\n        <el-table-column label=\"是否有效\">\n          <template slot-scope=\"scope\">\n            <el-switch\n              :value=\"scope.row.active === 1\"\n              active-color=\"#13ce66\"\n              inactive-color=\"#ff4949\"\n              @change=\"stateChanged(scope.row)\"\n              >\n            </el-switch>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"操作\" width=\"220px\">\n          <template slot-scope=\"scope\">\n            <el-tooltip effect=\"dark\" content=\"分配权限\" placement=\"top\" :enterable=\"false\">\n              <el-button type=\"info\" icon=\"el-icon-bank-card\" circle @click=\"getPermissions(scope.row.id)\"></el-button>\n            </el-tooltip>\n            <el-button type=\"primary\" icon=\"el-icon-edit\" circle @click=\"handleEdit(scope.row.id)\"></el-button>\n            <el-button type=\"danger\" icon=\"el-icon-delete\" circle  @click=\"handleDelete(scope.row.id)\"></el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 分页区域 -->\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.page\"\n        :page-sizes=\"[3, 5, 10, 20]\"\n        :page-size=\"queryInfo.limit\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      ></el-pagination>\n    </el-card>\n\n    <el-dialog :title=\"title\" :visible.sync=\"show\" :close-on-click-modal=\"false\" width=\"500px\">\n      <RoleEdit v-if=\"show\" :show.sync=\"show\" @getData=\"getData()\" :editid=\"editid\"></RoleEdit>\n    </el-dialog>\n\n        <!-- 分配权限的对话框 -->\n    <el-dialog title=\"分配权限\" :visible.sync=\"setRightDialogVisible\" width=\"50%\" @close=\"setRightDialogClosed\">\n      <!-- 树形控件 -->\n      <el-tree :data=\"rightslist\" :props=\"treeProps\" show-checkbox node-key=\"id\" default-expand-all :default-checked-keys=\"defKeys\" ref=\"treeRef\"></el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"allotRights\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport RoleEdit from '@/components/role/edit.vue'\nimport Breadcrumb from '@/components/Breadcrumb'\nexport default {\n  data () {\n    return {\n      queryInfo: {\n        name: '',\n        page: 1,\n        limit: 5\n      },\n      tableData: [],\n      total: 0,\n      show: false,\n      editid: null,\n      selectedrow: [],\n      title: '',\n      setRightDialogVisible: false,\n      // 所有权限的数据\n      rightslist: [],\n      // 树形控件的属性绑定对象\n      treeProps: {\n        label: 'name',\n        children: 'children'\n      },\n      // 默认选中的节点Id值数组\n      defKeys: [],\n      // 当前即将分配权限的角色id\n      roleId: '',\n      // 获取用户权限后，对应数据库的字段Id\n      id: 0,\n      // 权限父节点\n      parent: []\n    }\n  },\n  components: {\n    RoleEdit,\n    Breadcrumb\n  },\n  mounted () {\n    this.getData()\n    this.$axios.http.get('/permissions/parent').then(response => {\n      this.parent = response.data.data\n    })\n  },\n  methods: {\n    getData () {\n      this.$axios.get('/roles',\n        response => {\n          this.tableData = response.data.records\n          this.total = parseInt(response.data.total)\n        },\n        this.queryInfo\n      )\n    },\n    handleEdit (id) {\n      this.title = '修改角色'\n      this.editid = id\n      this.show = true\n    },\n    add () {\n      this.title = '增加角色'\n      this.editid = null\n      this.show = true\n    },\n    handleDelete (id) {\n      this.$axios.del(`/roles/${id}`, () => {\n        if (this.total === (this.queryInfo.page - 1) * this.queryInfo.limit + 1) this.queryInfo.page -= 1\n        this.getData()\n      })\n    },\n    handleSelectionChange (val) {\n      // val参数为所有选中行的数据\n      this.selectedrow = val // [ {} ,{} ,{}    ]\n    },\n    batchdel () {\n      if (this.selectedrow.length === 0) {\n        this.$message('没有任何被选中的数据')\n      } else {\n        const ids = []\n        for (let i = 0; i < this.selectedrow.length; i++) {\n          ids.push(this.selectedrow[i].id)\n        }\n        this.$axios.del('/roles/batchdel',\n          () => {\n            if (this.total === (this.queryInfo.page - 1) * this.queryInfo.limit + ids.length) this.queryInfo.page -= 1\n            this.getData()\n          },\n          {\n            ids: ids.join(',')\n          }\n        )\n      }\n    },\n    handleSizeChange (newSize) {\n      this.queryInfo.limit = newSize\n      this.getData()\n    },\n    // 监听 页码值 改变的事件\n    handleCurrentChange (newPage) {\n      this.queryInfo.page = newPage\n      this.getData()\n    },\n    // 监听 switch 开关状态的改变\n    stateChanged (info) {\n      const active = info.active === 1 ? 0 : 1\n      this.$axios.put(`/roles/${info.id}/state/${active}`, response => {\n        info.active = active\n      })\n    },\n    async getPermissions (id) {\n      this.roleId = id\n      // 获取所有权限的数据\n      const { data: res } = await this.$axios.http.get('permissions')\n\n      if (res.status !== 200) {\n        return this.$message.error('获取权限数据失败！')\n      }\n      // 把获取到的权限数据保存到 data 中\n      this.rightslist = res.data\n      // console.log(this.rightslist)\n      this.getLeafKeys(id)\n      this.setRightDialogVisible = true\n    },\n    // 通过递归的形式，获取角色下所有二级权限的id，并保存到 defKeys 数组中\n    async getLeafKeys (id) {\n      const { data: res } = await this.$axios.http.get(`/role-permission/${id}`)\n      if (res.status !== 200) {\n        this.id = 0\n        return\n      }\n      this.id = res.data.id\n      let ids = res.data.permissioinId || ''\n      ids = ids.split(',')\n      this.defKeys = ids.map(val => parseInt(val)).filter(val => !this.parent.includes(val))\n      console.log(this.defKeys)\n    },\n    // 监听分配权限对话框的关闭事件\n    setRightDialogClosed () {\n      this.defKeys = []\n    },\n    // 点击为角色分配权限\n    allotRights () {\n      const keys = [\n        ...this.$refs.treeRef.getCheckedKeys(),\n        ...this.$refs.treeRef.getHalfCheckedKeys()\n      ]\n      // console.log(keys)\n      if (this.id === 0) {\n        this.$axios.post('/role-permission', () => {}, {\n          roleId: this.roleId,\n          permissioinId: keys.join(',')\n        })\n      } else {\n        // console.log(this.id) 通过id进入将permissiosId加入\n        this.$axios.put(`/role-permission/${this.id}`, () => {}, {\n          permissioinId: keys.join(',')\n        })\n      }\n      this.setRightDialogVisible = false\n    }\n\n  }\n}\n</script>\n<style scoped>\n</style>\n"]}]}